#!/bin/bash

PASSWORD_FILE="password_store.csv"

# Draw a simple banner
clear 
echo "
 

‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà   ‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà      
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà      ‚ñà‚ñà      ‚ñà‚ñà 
‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà  ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà      ‚ñà‚ñà   ‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà ‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà‚ñà 
                                                                
                                       
"


# Create data file if it doesn't exist
touch "$PASSWORD_FILE"

validate_number() {
    if ! [[ "$1" =~ ^[0-9]+$ ]] || [ "$1" -le 0 ]; then
        echo "‚ùå Invalid input: '$1'. Please enter a positive number."
        exit 1
    fi
}

generate_password() {
    local PASS_LENGTH=$1
    local CHARSET='ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789!@#$%^&*()_+{}[]=-'
    local password
    while true; do
        password=$(tr -dc "$CHARSET" < /dev/urandom | head -c "$PASS_LENGTH")

        [[ "$password" =~ [A-Z] ]] || continue
        [[ "$password" =~ [a-z] ]] || continue
        [[ "$password" =~ [0-9] ]] || continue
        [[ "$password" =~ [\!\@\#\$\%\^\&\*\(\)\_\+\=\{\}\[\]\-] ]] || continue

        echo "$password"
        break
    done
}

save_password() {
    local service="$1"
    local username="$2"
    local password="$3"
    echo "$service,$username,$password" >> "$PASSWORD_FILE"
    echo "‚úÖ Saved for $service ($username)"
}

view_passwords() {
    echo ""
    echo "üîë Saved Passwords"
    echo "--------------------------------------------------"
    printf "%-20s %-20s %-30s\n" "SERVICE" "USERNAME" "PASSWORD"
    echo "--------------------------------------------------"
    if [[ -s "$PASSWORD_FILE" ]]; then
        while IFS=',' read -r service username password; do
            printf "%-20s %-20s %-30s\n" "$service" "$username" "$password"
        done < "$PASSWORD_FILE"
    else
        echo "No saved passwords!"
    fi
}

search_passwords() {
    read -p "üîé Enter service or username to search: " term
    echo "--------------------------------------------------"
    printf "%-20s %-20s %-30s\n" "SERVICE" "USERNAME" "PASSWORD"
    echo "--------------------------------------------------"
    grep -i "$term" "$PASSWORD_FILE" | while IFS=',' read -r service username password; do
        printf "%-20s %-20s %-30s\n" "$service" "$username" "$password"
    done
}

delete_password() {
    read -p "üóëÔ∏è  Enter service or username to delete: " term
    tmpfile=$(mktemp)
    grep -iv "$term" "$PASSWORD_FILE" > "$tmpfile"
    mv "$tmpfile" "$PASSWORD_FILE"
    echo "‚ôªÔ∏è Relevant entries deleted (if matched)."
}

main_menu() {
    while true; do
        echo ""
        echo "1. Generate a new password"
        echo "2. View all saved passwords"
        echo "3. Search for a password"
        echo "4. Delete a password"
        echo "5. Exit"
        echo ""
        read -p "Choose an option [1-5]: " choice
        case "$choice" in
            1)
                read -p "üî§ Service Name: " service
                read -p "üë§ Username/Email: " username
                read -p "üî¢ Password Length: " PASS_LENGTH
                validate_number "$PASS_LENGTH"
                password=$(generate_password "$PASS_LENGTH")
                echo -e "‚úÖ Generated Password: \033[0;32m$password\033[0m"
                read -p "üíæ Save this password? (Y/N): " save
                if [[ "$save" =~ ^[Yy]$ ]]; then
                    save_password "$service" "$username" "$password"
                fi
                ;;
            2)
                view_passwords
                ;;
            3)
                search_passwords
                ;;
            4)
                delete_password
                ;;
            5)
                echo "üëã Bye!"
                exit 0
                ;;
            *)
                echo "‚ùå Invalid option!"
                ;;
        esac
    done
}

main_menu
